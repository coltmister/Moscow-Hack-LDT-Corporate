import uuid
import random

from django.db import models

from core.models import AbstractBase


class Chat(AbstractBase):
    TEAM_CHAT = 0
    INTEREST_CHAT = 1

    CHAT_TYPE = (
        (TEAM_CHAT, '–ß–∞—Ç –∫–æ–º–∞–Ω–¥—ã'),
        (INTEREST_CHAT, '–ß–∞—Ç –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º'),
    )

    id = models.UUIDField(primary_key=True, default=uuid.uuid4, verbose_name="ID —á–∞—Ç–∞")
    name = models.CharField(max_length=255, verbose_name="–ù–∞–∑–≤–∞–Ω–∏–µ —á–∞—Ç–∞")
    chat_link = models.URLField(verbose_name="–°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç –≤–∫")
    chat_id = models.IntegerField(verbose_name="ID —á–∞—Ç–∞ –≤–∫", unique=True)
    peer_id = models.IntegerField(verbose_name="Peer ID —á–∞—Ç–∞ –≤–∫", unique=True)
    users_count = models.IntegerField(verbose_name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç–µ", default=0)
    chat_type = models.IntegerField(choices=CHAT_TYPE, verbose_name="–¢–∏–ø —á–∞—Ç–∞", default=TEAM_CHAT)

    class Meta:
        verbose_name = "–ß–∞—Ç"
        verbose_name_plural = "–ß–∞—Ç—ã"
        ordering = ['-created_at']

    def __str__(self):
        return f"{self.id}. üåù {self.name}"

    def get_team_chat_init_greeting_message(self, user_first_name):
        if not self.chat_type == Chat.TEAM_CHAT:
            return f"–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç '{self.name}'. "

        if self.team_chat.members.all().count() > 1:
            message = f"""–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—ã '{self.team_chat.name}'." \
                          –ú—ã –≤–∏–¥–∏–º, —á—Ç–æ –≤ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –µ—Å—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∏. –ü–æ–ª–æ–≤–∏–Ω–∞ –¥–µ–ª–∞ —Å–¥–µ–ª–∞–Ω–∞!
                          –ò–º –≤—Å–µ–º –º—ã —É–∂–µ –ø—Ä–∏—Å–ª–∞–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –û–∂–∏–¥–∞–π—Ç–µ, –ø–æ–∫–∞ –æ–Ω–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—Å—è.
                          –í —ç—Ç–æ—Ç —á–∞—Ç –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –æ—Ç –∫–æ–º–∞–Ω–¥—ã, —Ç–∞–∫ –∏ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏.
                          
                          –° ‚ù§Ô∏è, –ê–≥–µ–Ω—Å—Ç–≤–æ –ò–Ω–Ω–æ–≤–∞—Ü–∏–π –ú–æ—Å–∫–≤—ã."""
        else:
            message = f"""–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—ã '{self.team_chat.name}'." \
                          –í –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤, –Ω–æ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –∏—Ö –Ω–∞ –ø–æ—Ä—Ç–∞–ª–µ.
                          –£—Å–ø–µ—Ö–æ–≤ –≤ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–¥–µ–π!
                          
                          –° ‚ù§Ô∏è, –ê–≥–µ–Ω—Å—Ç–≤–æ –ò–Ω–Ω–æ–≤–∞—Ü–∏–π –ú–æ—Å–∫–≤—ã."""
        return message

    def get_new_person_joined(self, user_first_name):
        message = f"–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç –∫–æ–º–∞–Ω–¥—ã '{self.team_chat.name}'." \
                  f"–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è –∏ —Ä–∞—Å—Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ —Ç–µ–±—è —É–∑–Ω–∞—Ç—å. "

        return message

    def get_kicked_user_message(self):
        message = f"–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ—á–µ–º—É –≤—ã –∏—Å–∫–ª—é—á–∏–ª–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è? –û–Ω –Ω–µ –ø–æ–¥–æ—à–µ–ª –∫–æ–º–∞–Ω–¥–µ? " \
                  f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –ø–æ–¥–±–æ—Ä–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. "

        return message

    @staticmethod
    def get_tag_message(is_question=False):
        affirmative_answers = ["–ü—Ä–∏–≤–µ—Ç! –£–∂–µ –ø–µ—Ä–µ–¥–∞—é –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É, –æ–Ω –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è",
                               "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥—ã, —á—Ç–æ –≤—ã –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å –∫ –Ω–∞–º! –ü–µ—Ä–µ–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É",
                               "–ü—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–µ—Ä–µ–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]

        question_answers = ["–ü—Ä–∏–≤–µ—Ç! –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–æ–ø—Ä–æ—Å! –ü–µ—Ä–µ–¥–∞–¥–∏–º –µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É",
                            "–ü—Ä–∏–≤–µ—Ç! –í–∞—à –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ.",
                            "–£–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –û–Ω —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç.",
                            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ –Ω–∞–º! –ü–µ—Ä–µ–¥–∞–¥–∏–º –∑–∞–ø—Ä–æ—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
        if is_question:
            return random.choice(question_answers)
        else:
            return random.choice(affirmative_answers)


class ChatNotification(AbstractBase):
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, verbose_name="ID —á–∞—Ç–∞")
    chat = models.ForeignKey(Chat, on_delete=models.CASCADE, verbose_name="–ß–∞—Ç")
    message = models.TextField(verbose_name="–°–æ–æ–±—â–µ–Ω–∏–µ")
    is_read = models.BooleanField(default=False, verbose_name="–ü—Ä–æ—á–∏—Ç–∞–Ω–æ")

    class Meta:
        verbose_name = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö"
        verbose_name_plural = "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —á–∞—Ç–∞—Ö"
        ordering = ['-created_at']

    def __str__(self):
        return f"{self.id}. üåù {self.message}"
