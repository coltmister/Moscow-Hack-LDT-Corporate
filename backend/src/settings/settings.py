"""
Django settings for settings project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

import environ

env = environ.Env()

BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = env('SECRET_KEY')

PRODUCTION = True if env('PRODUCTION') == 'True' else False

DEBUG = True if env('DEBUG') == 'True' else False

ALLOWED_HOSTS = ["*"]
CSRF_TRUSTED_ORIGINS = ['https://api.dpir.moscow', 'https://id.dpir.moscow', 'https://dpir.moscow',
                        'http://127.0.0.1:8000', 'http://127.0.0.1:5173', 'http://localhost:5173',
                        'https://react-mui-vite-fxzj.vercel.app']
CORS_ALLOWED_ORIGINS = ['https://api.dpir.moscow', 'https://id.dpir.moscow', 'https://dpir.moscow',
                        'http://127.0.0.1:8000', 'http://127.0.0.1:5173', 'http://localhost:5173',
                        'https://react-mui-vite-fxzj.vercel.app']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.postgres',
    'django_celery_beat',
    'django_celery_results',
    'corsheaders',
    'core',
    'users',
    'iam',
    'corp',
    'ideas',
    'teams',
    'chats'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'settings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'settings.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': env('DATABASE_ENGINE'),
        'NAME': env('POSTGRES_DB'),
        'USER': env('POSTGRES_USER'),
        'PASSWORD': env('POSTGRES_PASSWORD'),
        'HOST': env('DATABASE_HOST'),
        'PORT': env('DATABASE_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/


LOG_FILE = env('LOG_FILE')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'high': {
            'format': '{asctime} {levelname} {name} [line {lineno}] {message}',
            'style': '{',
        },
        'low': {
            'format': '{asctime} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'high',
            'filename': LOG_FILE,
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'high'
        },
    },
    'loggers': {
        'core': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
        'corp': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
        'celery': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True
        },

    }
}

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_L10N = True

USE_TZ = True

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

STATIC_URL = '/api/static/'
STATIC_ROOT = '/var/www/html/static/'

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [],
    'DEFAULT_PERMISSION_CLASSES': [],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
    ],
    'EXCEPTION_HANDLER': 'core.utils.exceptions.api_exception_handler'
}

CELERY_TIMEZONE = 'Europe/Moscow'
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 90 * 60
CELERY_BROKER_URL = env('CELERY_BROKER_URL')
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
DJANGO_CELERY_BEAT_TZ_AWARE = True

TELEGRAM_BOT_TOKEN = env('TELEGRAM_BOT_TOKEN')
DEBUG_CHAT_ID = env('DEBUG_CHAT_ID')

CLIENT_ID = env('CLIENT_ID')
CLIENT_SECRET = env('CLIENT_SECRET')
MASTER_REALM_ENDPOINT = env('MASTER_REALM_ENDPOINT')
USER_INFO_ENDPOINT = env('USER_INFO_ENDPOINT')

AUTHORIZATION_ENDPOINT = env('AUTHORIZATION_ENDPOINT')
USERS_ENDPOINT = env('USERS_ENDPOINT')
REDIRECT_URI = env('REDIRECT_URI')
ADMIN_URL = env('ADMIN_URL')
ACCOUNT_SESSION_URL = env('ACCOUNT_SESSION_URL')
ADMIN_SESSION_URL = env('ADMIN_SESSION_URL')
END_SESSION_ENDPOINT = env('END_SESSION_ENDPOINT')
JWT_HASH = env('JWT_HASH')

KEYCLOAK_COOKIE_PATH = env('KEYCLOAK_COOKIE_PATH')
KEYCLOAK_COOKIE_EXPIRES_MIN = env('KEYCLOAK_COOKIE_EXPIRES_MIN')
FRONT_URL = env('FRONT_URL')
FRONT_LOGIN_URL = env('FRONT_LOGIN_URL')
IMPERSONATION_URL = env('IMPERSONATION_URL')

S3_SERVER = env('S3_SERVER')
S3_ACCESS_KEY = env('S3_ACCESS_KEY')
S3_SECRET_KEY = env('S3_SECRET_KEY')
S3_IDEA_FILES_BUCKET = env('S3_IDEA_FILES_BUCKET')
S3_POST_FILES_BUCKET = env('S3_POST_FILES_BUCKET')
S3_USER_PHOTO_BUCKET = env('S3_USER_PHOTO_BUCKET')
HOST = env('HOST')

VK_ACCESS_TOKEN = env('VK_ACCESS_TOKEN')
VK_GROUP_ID = int(env('VK_GROUP_ID'))
VK_SECRET_KEY = env('VK_SECRET_KEY')
VK_BOT_NAME = env('VK_BOT_NAME')

EMAIL_HOST = env('EMAIL_HOST')
EMAIL_PORT = env('EMAIL_PORT')
EMAIL_ADDRESS = env('EMAIL_ADDRESS')
EMAIL_PASSWORD = env('EMAIL_PASSWORD')
