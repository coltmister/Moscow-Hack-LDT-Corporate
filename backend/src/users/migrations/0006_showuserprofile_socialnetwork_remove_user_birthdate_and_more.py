# Generated by Django 4.0 on 2022-10-28 21:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_user_is_admin'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShowUserProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='ID информации о приватности')),
                ('show_birthdate', models.BooleanField(default=True, verbose_name='Показывать ДР?')),
                ('show_sex', models.BooleanField(default=False, verbose_name='Показывать пол?')),
                ('show_biography', models.BooleanField(default=False, verbose_name='Показывать биографию?')),
                ('show_phone', models.BooleanField(default=False, verbose_name='Показывать осн. телефон?')),
                ('show_email', models.BooleanField(default=True, verbose_name='Показывать осн. почту?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='ID соц. сети')),
                ('network_type', models.CharField(choices=[('VK', 'Вконтакте'), ('TG', 'Telegram'), ('IG', 'Instagram'), ('FB', 'Facebook'), ('TW', 'Twitter'), ('LI', 'LinkedIn'), ('GG', 'Google')], max_length=5, verbose_name='Тип соц.сети')),
                ('nickname', models.CharField(max_length=120, verbose_name='Никнейм в соц. сети')),
                ('confirmed', models.BooleanField(default=True, verbose_name='Подтвержден ли аккаунт соц. сети?')),
                ('show', models.BooleanField(default=True, verbose_name='Показывать аккаунт соц. сети?')),
            ],
        ),
        migrations.RemoveField(
            model_name='user',
            name='birthdate',
        ),
        migrations.RemoveField(
            model_name='user',
            name='phone',
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('id', models.UUIDField(primary_key=True, serialize=False, verbose_name='ID информации о пользователе')),
                ('avatar', models.CharField(blank=True, max_length=255, null=True, verbose_name='Аватар')),
                ('avatar_thumbnail', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Миниатюра аватара')),
                ('biography', models.TextField(blank=True, null=True, verbose_name='Биография')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Номер телефона пользователя в международном формате')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Дата рождения пользователя')),
                ('sex', models.CharField(blank=True, choices=[('female', 'Жен'), ('male', 'Муж')], max_length=10, null=True, verbose_name='Пол пользователя')),
                ('show_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.showuserprofile', verbose_name='Какие поля показывать?')),
                ('social_networks', models.ManyToManyField(blank=True, to='users.SocialNetwork', verbose_name='Соц. сети')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.user', verbose_name='Пользователь')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='socialnetwork',
            constraint=models.UniqueConstraint(fields=('network_type', 'nickname'), name='unique_social_network'),
        ),
    ]
